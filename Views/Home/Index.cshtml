@using ImageStore.Data.Models

@model IEnumerable<Image>
@{
    ViewData["Title"] = "Home";
}
<div id="stored-images-container" class="container">
    <h3>Images</h3>
    @{
        foreach (var image in Model)
        {
            // Get relative path to file
            var index = @image.FilePath.IndexOf("Images\\");
            <text>
                @if (index < 0)
                {
                    continue;
                }
            </text>
            var src = @image.FilePath.Substring(index, @image.FilePath.Length - index)?.Replace("\\", "/");
            <div class="stored-image-container" data-image-id="@image.Id">
                <img class="stored-image" src="@src" alt="Stored image" runat="server" />
                <span class="image-caption">@image.Caption</span>
                <i class="fa fa-lg fa-trash delete-icon" aria-hidden="true"></i>
            </div>
        }
    }
</div>
<div id="image-upload-container" class="container">
    <h3>Upload an image</h3>
    <form id="upload-form">
        <label for="file-input">Select an image:</label>
        <input type="file" id="file-input" name="file" />
        <label for="caption-input">Enter a caption:</label>
        <input type="text" id="caption-input" placeholder="Enter caption" />
        <button type="submit" class="btn btn-secondary">Upload</button>
    </form>
    <textarea id="file-contents"></textarea>
</div>
